[[package]]
name = "aiohttp"
version = "3.9.3"
description = "Async http client/server framework (asyncio)"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
aiosignal = ">=1.1.2"
async-timeout = {version = ">=4.0,<5.0", markers = "python_version < \"3.11\""}
attrs = ">=17.3.0"
frozenlist = ">=1.1.1"
multidict = ">=4.5,<7.0"
yarl = ">=1.0,<2.0"

[package.extras]
speedups = ["brotlicffi", "brotli", "aiodns"]

[[package]]
name = "aiosignal"
version = "1.3.1"
description = "aiosignal: a list of registered asynchronous callbacks"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
frozenlist = ">=1.1.0"

[[package]]
name = "anyio"
version = "4.2.0"
description = "High level compatibility layer for multiple asynchronous event loop implementations"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
exceptiongroup = {version = ">=1.0.2", markers = "python_version < \"3.11\""}
idna = ">=2.8"
sniffio = ">=1.1"
typing-extensions = {version = ">=4.1", markers = "python_version < \"3.11\""}

[package.extras]
doc = ["packaging", "Sphinx (>=7)", "sphinx-rtd-theme", "sphinx-autodoc-typehints (>=1.2.0)"]
test = ["anyio", "coverage[toml] (>=7)", "exceptiongroup (>=1.2.0)", "hypothesis (>=4.0)", "psutil (>=5.9)", "pytest (>=7.0)", "pytest-mock (>=3.6.1)", "trustme", "uvloop (>=0.17)"]
trio = ["trio (>=0.23)"]

[[package]]
name = "appnope"
version = "0.1.3"
description = "Disable App Nap on macOS >= 10.9"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "apscheduler"
version = "3.10.4"
description = "In-process task scheduler with Cron-like capabilities"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
pytz = "*"
six = ">=1.4.0"
tzlocal = ">=2.0,<3.0.0 || >=4.0.0"

[package.extras]
doc = ["sphinx", "sphinx-rtd-theme"]
gevent = ["gevent"]
mongodb = ["pymongo (>=3.0)"]
redis = ["redis (>=3.0)"]
rethinkdb = ["rethinkdb (>=2.4.0)"]
sqlalchemy = ["sqlalchemy (>=1.4)"]
testing = ["pytest", "pytest-asyncio", "pytest-cov", "pytest-tornado5"]
tornado = ["tornado (>=4.3)"]
twisted = ["twisted"]
zookeeper = ["kazoo"]

[[package]]
name = "argon2-cffi"
version = "23.1.0"
description = "Argon2 for Python"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
argon2-cffi-bindings = "*"

[package.extras]
dev = ["argon2-cffi", "tox (>4)"]
docs = ["furo", "myst-parser", "sphinx", "sphinx-copybutton", "sphinx-notfound-page"]
tests = ["hypothesis", "pytest"]
typing = ["mypy"]

[[package]]
name = "argon2-cffi-bindings"
version = "21.2.0"
description = "Low-level CFFI bindings for Argon2"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
cffi = ">=1.0.1"

[package.extras]
dev = ["pytest", "cogapp", "pre-commit", "wheel"]
tests = ["pytest"]

[[package]]
name = "arrow"
version = "1.3.0"
description = "Better dates & times for Python"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
python-dateutil = ">=2.7.0"
types-python-dateutil = ">=2.8.10"

[package.extras]
doc = ["doc8", "sphinx (>=7.0.0)", "sphinx-autobuild", "sphinx-autodoc-typehints", "sphinx_rtd_theme (>=1.3.0)"]
test = ["dateparser (>=1.0.0,<2.0.0)", "pre-commit", "pytest", "pytest-cov", "pytest-mock", "pytz (==2021.1)", "simplejson (>=3.0.0,<4.0.0)"]

[[package]]
name = "astor"
version = "0.8.1"
description = "Read/rewrite/write Python ASTs"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,>=2.7"

[[package]]
name = "asttokens"
version = "2.4.1"
description = "Annotate AST trees with source code positions"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
six = ">=1.12.0"

[package.extras]
astroid = ["astroid (>=1,<2)", "astroid (>=2,<4)"]
test = ["pytest", "astroid (>=1,<2)", "astroid (>=2,<4)"]

[[package]]
name = "async-lru"
version = "2.0.4"
description = "Simple LRU cache for asyncio"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
typing-extensions = {version = ">=4.0.0", markers = "python_version < \"3.11\""}

[[package]]
name = "async-timeout"
version = "4.0.3"
description = "Timeout context manager for asyncio programs"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "attrs"
version = "23.2.0"
description = "Classes Without Boilerplate"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
cov = ["attrs", "coverage[toml] (>=5.3)"]
dev = ["attrs", "pre-commit"]
docs = ["furo", "myst-parser", "sphinx", "sphinx-notfound-page", "sphinxcontrib-towncrier", "towncrier", "zope-interface"]
tests = ["attrs", "zope-interface"]
tests-mypy = ["mypy (>=1.6)", "pytest-mypy-plugins"]
tests-no-zope = ["attrs", "cloudpickle", "hypothesis", "pympler", "pytest-xdist", "pytest (>=4.3.0)"]

[[package]]
name = "babel"
version = "2.14.0"
description = "Internationalization utilities"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
dev = ["pytest (>=6.0)", "pytest-cov", "freezegun (>=1.0,<2.0)"]

[[package]]
name = "beautifulsoup4"
version = "4.12.2"
description = "Screen-scraping library"
category = "dev"
optional = false
python-versions = ">=3.6.0"

[package.dependencies]
soupsieve = ">1.2"

[package.extras]
html5lib = ["html5lib"]
lxml = ["lxml"]

[[package]]
name = "bids-validator"
version = "1.14.0"
description = "Validator for the Brain Imaging Data Structure"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "bleach"
version = "6.1.0"
description = "An easy safelist-based HTML-sanitizing tool."
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
six = ">=1.9.0"
webencodings = "*"

[package.extras]
css = ["tinycss2 (>=1.1.0,<1.3)"]

[[package]]
name = "bokeh"
version = "3.4.0"
description = "Interactive plots and applications in the browser from Python"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
contourpy = ">=1.2"
Jinja2 = ">=2.9"
numpy = ">=1.16"
packaging = ">=16.8"
pandas = ">=1.2"
pillow = ">=7.1.0"
PyYAML = ">=3.10"
tornado = ">=6.2"
xyzservices = ">=2021.09.1"

[[package]]
name = "certifi"
version = "2023.11.17"
description = "Python package for providing Mozilla's CA Bundle."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "cffi"
version = "1.16.0"
description = "Foreign Function Interface for Python calling C code."
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
pycparser = "*"

[[package]]
name = "charset-normalizer"
version = "3.3.2"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
category = "main"
optional = false
python-versions = ">=3.7.0"

[[package]]
name = "ci-info"
version = "0.3.0"
description = "Continuous Integration Information"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
all = ["pytest"]
test = ["pytest"]
tests = ["pytest"]

[[package]]
name = "click"
version = "8.1.7"
description = "Composable command line interface toolkit"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[[package]]
name = "codecarbon"
version = "2.3.4"
description = ""
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
arrow = "*"
click = "*"
pandas = "*"
prometheus-client = "*"
psutil = "*"
py-cpuinfo = "*"
pynvml = "*"
rapidfuzz = "*"
requests = "*"

[package.extras]
dashboard = ["dash (>=2.2.0)", "plotly (>=5.6.0)", "dash-bootstrap-components"]
viz = ["dash", "dash-bootstrap-components (<1.0.0)", "fire"]

[[package]]
name = "colorama"
version = "0.4.6"
description = "Cross-platform colored terminal text."
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7"

[[package]]
name = "comm"
version = "0.2.1"
description = "Jupyter Python Comm implementation, for usage in ipykernel, xeus-python etc."
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
traitlets = ">=4"

[package.extras]
test = ["pytest"]

[[package]]
name = "contourpy"
version = "1.2.0"
description = "Python library for calculating contours of 2D quadrilateral grids"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
numpy = ">=1.20,<2.0"

[package.extras]
docs = ["furo", "sphinx (>=7.2)", "sphinx-copybutton"]
bokeh = ["bokeh", "selenium"]
mypy = ["contourpy", "docutils-stubs", "mypy (==1.6.1)", "types-pillow"]
test = ["contourpy", "matplotlib", "pillow"]
test-no-images = ["pytest", "pytest-cov", "pytest-xdist", "wurlitzer"]

[[package]]
name = "cycler"
version = "0.12.1"
description = "Composable style cycles"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
docs = ["ipython", "matplotlib", "numpydoc", "sphinx"]
tests = ["pytest", "pytest-cov", "pytest-xdist"]

[[package]]
name = "datasets"
version = "2.18.0"
description = "HuggingFace community-driven open-source library of datasets"
category = "main"
optional = false
python-versions = ">=3.8.0"

[package.dependencies]
aiohttp = "*"
dill = ">=0.3.0,<0.3.9"
filelock = "*"
fsspec = {version = ">=2023.1.0,<=2024.2.0", extras = ["http"]}
huggingface-hub = ">=0.19.4"
multiprocess = "*"
numpy = ">=1.17"
packaging = "*"
pandas = "*"
pyarrow = ">=12.0.0"
pyarrow-hotfix = "*"
pyyaml = ">=5.1"
requests = ">=2.19.0"
tqdm = ">=4.62.1"
xxhash = "*"

[package.extras]
apache-beam = ["apache-beam (>=2.26.0)"]
audio = ["soundfile (>=0.12.1)", "librosa"]
benchmarks = ["tensorflow (==2.12.0)", "torch (==2.0.1)", "transformers (==4.30.1)"]
dev = ["absl-py", "joblib (<1.3.0)", "joblibspark", "pytest", "pytest-datadir", "pytest-xdist", "elasticsearch (<8.0.0)", "faiss-cpu (>=1.6.4)", "lz4", "pyspark (>=3.4)", "py7zr", "rarfile (>=4.0)", "sqlalchemy", "s3fs (>=2021.11.1)", "tiktoken", "torch (>=2.0.0)", "soundfile (>=0.12.1)", "transformers", "typing-extensions (>=4.6.1)", "zstandard", "Pillow (>=6.2.1)", "librosa", "ruff (>=0.3.0)", "s3fs", "torch", "tensorflow (>=2.3,!=2.6.0,!=2.6.1)", "tensorflow (>=2.2.0,!=2.6.0,!=2.6.1)", "jax (>=0.3.14)", "jaxlib (>=0.3.14)", "apache-beam (>=2.26.0)", "tensorflow-macos"]
docs = ["s3fs", "transformers", "torch", "tensorflow (>=2.2.0,!=2.6.0,!=2.6.1)", "tensorflow-macos"]
jax = ["jax (>=0.3.14)", "jaxlib (>=0.3.14)"]
metrics-tests = ["accelerate", "bert-score (>=0.3.6)", "jiwer", "langdetect", "mauve-text", "nltk", "rouge-score", "sacrebleu", "sacremoses", "scikit-learn", "scipy", "sentencepiece", "seqeval", "spacy (>=3.0.0)", "tldextract", "toml (>=0.10.1)", "typer (<0.5.0)", "requests-file (>=1.5.1)", "tldextract (>=3.1.0)", "texttable (>=1.6.3)", "Werkzeug (>=1.0.1)", "six (>=1.15.0,<1.16.0)"]
quality = ["ruff (>=0.3.0)"]
s3 = ["s3fs"]
tensorflow = ["tensorflow (>=2.2.0,!=2.6.0,!=2.6.1)", "tensorflow-macos"]
tensorflow_gpu = ["tensorflow-gpu (>=2.2.0,!=2.6.0,!=2.6.1)"]
tests = ["absl-py", "joblib (<1.3.0)", "joblibspark", "pytest", "pytest-datadir", "pytest-xdist", "elasticsearch (<8.0.0)", "faiss-cpu (>=1.6.4)", "lz4", "pyspark (>=3.4)", "py7zr", "rarfile (>=4.0)", "sqlalchemy", "s3fs (>=2021.11.1)", "tiktoken", "torch (>=2.0.0)", "soundfile (>=0.12.1)", "transformers", "typing-extensions (>=4.6.1)", "zstandard", "Pillow (>=6.2.1)", "librosa", "tensorflow (>=2.3,!=2.6.0,!=2.6.1)", "jax (>=0.3.14)", "jaxlib (>=0.3.14)", "apache-beam (>=2.26.0)", "tensorflow-macos"]
torch = ["torch"]
vision = ["Pillow (>=6.2.1)"]

[[package]]
name = "debugpy"
version = "1.8.0"
description = "An implementation of the Debug Adapter Protocol for Python"
category = "dev"
optional = false
python-versions = ">=3.8"

[[package]]
name = "decorator"
version = "5.1.1"
description = "Decorators for Humans"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "defusedxml"
version = "0.7.1"
description = "XML bomb protection for Python stdlib modules"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "dill"
version = "0.3.8"
description = "serialize all of Python"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
graph = ["objgraph (>=1.7.2)"]
profile = ["gprof2dot (>=2022.7.29)"]

[[package]]
name = "docopt"
version = "0.6.2"
description = "Pythonic argument parser, that will make you smile"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "etelemetry"
version = "0.3.1"
description = "Etelemetry python client API"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
ci-info = ">=0.2"
packaging = "*"
requests = "*"

[package.extras]
all = ["pytest", "pytest-cov", "codecov"]
test = ["pytest", "pytest-cov", "codecov"]
tests = ["pytest", "pytest-cov", "codecov"]

[[package]]
name = "exceptiongroup"
version = "1.2.0"
description = "Backport of PEP 654 (exception groups)"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
test = ["pytest (>=6)"]

[[package]]
name = "executing"
version = "2.0.1"
description = "Get the currently executing AST node of a frame, and other information"
category = "dev"
optional = false
python-versions = ">=3.5"

[package.extras]
tests = ["asttokens (>=2.1.0)", "ipython", "pytest", "coverage", "coverage-enable-subprocess", "littleutils", "rich"]

[[package]]
name = "fastjsonschema"
version = "2.19.1"
description = "Fastest Python implementation of JSON schema"
category = "dev"
optional = false
python-versions = "*"

[package.extras]
devel = ["colorama", "jsonschema", "json-spec", "pylint", "pytest", "pytest-benchmark", "pytest-cache", "validictory"]

[[package]]
name = "filelock"
version = "3.13.1"
description = "A platform independent file lock."
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
docs = ["furo (>=2023.9.10)", "sphinx-autodoc-typehints (>=1.24)", "sphinx (>=7.2.6)"]
testing = ["covdefaults (>=2.3)", "coverage (>=7.3.2)", "diff-cover (>=8)", "pytest-cov (>=4.1)", "pytest-mock (>=3.12)", "pytest-timeout (>=2.2)", "pytest (>=7.4.3)"]
typing = ["typing-extensions (>=4.8)"]

[[package]]
name = "fmriprep"
version = "23.2.1"
description = "A robust and easy-to-use pipeline for preprocessing of diverse fMRI data"
category = "main"
optional = false
python-versions = ">=3.10"

[package.dependencies]
apscheduler = "*"
codecarbon = "*"
looseversion = "*"
nibabel = ">=4.0.1"
nipype = ">=1.8.5"
nireports = ">=23.2.0"
nitime = "*"
nitransforms = ">=21.0.0"
niworkflows = ">=1.10.0"
numpy = ">=1.22"
packaging = "*"
pandas = "*"
psutil = ">=5.4"
pybids = ">=0.15.2"
requests = "*"
sdcflows = ">=2.8.0"
smriprep = ">=0.13.2"
tedana = ">=23.0.2"
templateflow = ">=23.0.0"
toml = "*"

[package.extras]
all = ["fmriprep"]
container = ["datalad", "datalad-osf", "fmriprep"]
dev = ["black (>=22.3.0,<22.4.0)", "flake8-pyproject", "isort (>=5.10.1,<5.11.0)", "pre-commit"]
doc = ["pydot (>=1.2.3)", "sphinx-argparse", "sphinx-rtd-theme (>=0.5.2)", "sphinx (>=5)"]
docs = ["fmriprep"]
duecredit = ["duecredit"]
maint = ["fuzzywuzzy", "python-levenshtein"]
telemetry = ["migas (>=0.4.0)", "sentry-sdk (>=1.3)"]
test = ["coverage", "pytest", "pytest-cov", "pytest-env"]
tests = ["fmriprep"]

[[package]]
name = "fmriprep-docker"
version = "23.2.1"
description = "A wrapper for generating Docker commands using regular fMRIPrep syntax"
category = "main"
optional = false
python-versions = ">=2.7"

[[package]]
name = "fonttools"
version = "4.47.0"
description = "Tools to manipulate font files"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
all = ["fs (>=2.2.0,<3)", "lxml (>=4.0,<5)", "zopfli (>=0.1.4)", "lz4 (>=1.7.4.2)", "pycairo", "matplotlib", "sympy", "skia-pathops (>=0.5.0)", "uharfbuzz (>=0.23.0)", "brotlicffi (>=0.8.0)", "scipy", "brotli (>=1.0.1)", "munkres", "unicodedata2 (>=15.1.0)", "xattr"]
graphite = ["lz4 (>=1.7.4.2)"]
interpolatable = ["pycairo", "scipy", "munkres"]
lxml = ["lxml (>=4.0,<5)"]
pathops = ["skia-pathops (>=0.5.0)"]
plot = ["matplotlib"]
repacker = ["uharfbuzz (>=0.23.0)"]
symfont = ["sympy"]
type1 = ["xattr"]
ufo = ["fs (>=2.2.0,<3)"]
unicode = ["unicodedata2 (>=15.1.0)"]
woff = ["zopfli (>=0.1.4)", "brotlicffi (>=0.8.0)", "brotli (>=1.0.1)"]

[[package]]
name = "formulaic"
version = "0.5.2"
description = "An implementation of Wilkinson formulas."
category = "main"
optional = false
python-versions = ">=3.7.2"

[package.dependencies]
astor = ">=0.8"
interface-meta = ">=1.2.0"
numpy = ">=1.16.5"
pandas = ">=1.0"
scipy = ">=1.6"
typing-extensions = ">=4.2.0"
wrapt = ">=1.0"

[package.extras]
arrow = ["pyarrow (>=1)"]
calculus = ["sympy (>=1.3,<1.10)"]

[[package]]
name = "fqdn"
version = "1.5.1"
description = "Validates fully-qualified domain names against RFC 1123, so that they are acceptable to modern bowsers"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0, !=3.1, !=3.2, !=3.3, !=3.4, <4"

[[package]]
name = "frozenlist"
version = "1.4.1"
description = "A list-like structure which implements collections.abc.MutableSequence"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "fsspec"
version = "2024.2.0"
description = "File-system specification"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
aiohttp = {version = "<4.0.0a0 || >4.0.0a0,<4.0.0a1 || >4.0.0a1", optional = true, markers = "extra == \"http\""}

[package.extras]
abfs = ["adlfs"]
adl = ["adlfs"]
arrow = ["pyarrow (>=1)"]
dask = ["dask", "distributed"]
devel = ["pytest", "pytest-cov"]
dropbox = ["dropboxdrivefs", "requests", "dropbox"]
full = ["adlfs", "aiohttp (!=4.0.0a0,!=4.0.0a1)", "dask", "distributed", "dropbox", "dropboxdrivefs", "fusepy", "gcsfs", "libarchive-c", "ocifs", "panel", "paramiko", "pyarrow (>=1)", "pygit2", "requests", "s3fs", "smbprotocol", "tqdm"]
fuse = ["fusepy"]
gcs = ["gcsfs"]
git = ["pygit2"]
github = ["requests"]
gs = ["gcsfs"]
gui = ["panel"]
hdfs = ["pyarrow (>=1)"]
http = ["aiohttp (!=4.0.0a0,!=4.0.0a1)"]
libarchive = ["libarchive-c"]
oci = ["ocifs"]
s3 = ["s3fs"]
sftp = ["paramiko"]
smb = ["smbprotocol"]
ssh = ["paramiko"]
tqdm = ["tqdm"]

[[package]]
name = "greenlet"
version = "3.0.3"
description = "Lightweight in-process concurrent programming"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["sphinx", "furo"]
test = ["objgraph", "psutil"]

[[package]]
name = "h5py"
version = "3.10.0"
description = "Read and write HDF5 files from Python"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = ">=1.17.3"

[[package]]
name = "huggingface-hub"
version = "0.22.2"
description = "Client library to download and publish models, datasets and other repos on the huggingface.co hub"
category = "main"
optional = false
python-versions = ">=3.8.0"

[package.dependencies]
filelock = "*"
fsspec = ">=2023.5.0"
packaging = ">=20.9"
pyyaml = ">=5.1"
requests = "*"
tqdm = ">=4.42.1"
typing-extensions = ">=3.7.4.3"

[package.extras]
all = ["InquirerPy (==0.3.4)", "aiohttp", "minijinja (>=1.0)", "jedi", "jinja2", "pytest", "pytest-cov", "pytest-env", "pytest-xdist", "pytest-vcr", "pytest-asyncio", "pytest-rerunfailures", "urllib3 (<2.0)", "soundfile", "pillow", "gradio", "numpy", "ruff (>=0.3.0)", "mypy (==1.5.1)", "typing-extensions (>=4.8.0)", "types-pyyaml", "types-requests", "types-simplejson", "types-toml", "types-tqdm", "types-urllib3"]
cli = ["InquirerPy (==0.3.4)"]
dev = ["InquirerPy (==0.3.4)", "aiohttp", "minijinja (>=1.0)", "jedi", "jinja2", "pytest", "pytest-cov", "pytest-env", "pytest-xdist", "pytest-vcr", "pytest-asyncio", "pytest-rerunfailures", "urllib3 (<2.0)", "soundfile", "pillow", "gradio", "numpy", "ruff (>=0.3.0)", "mypy (==1.5.1)", "typing-extensions (>=4.8.0)", "types-pyyaml", "types-requests", "types-simplejson", "types-toml", "types-tqdm", "types-urllib3"]
fastai = ["toml", "fastai (>=2.4)", "fastcore (>=1.3.27)"]
hf-transfer = ["hf-transfer (>=0.1.4)"]
inference = ["aiohttp", "minijinja (>=1.0)"]
quality = ["ruff (>=0.3.0)", "mypy (==1.5.1)"]
tensorflow = ["tensorflow", "pydot", "graphviz"]
tensorflow-testing = ["tensorflow", "keras (<3.0)"]
testing = ["InquirerPy (==0.3.4)", "aiohttp", "minijinja (>=1.0)", "jedi", "jinja2", "pytest", "pytest-cov", "pytest-env", "pytest-xdist", "pytest-vcr", "pytest-asyncio", "pytest-rerunfailures", "urllib3 (<2.0)", "soundfile", "pillow", "gradio", "numpy"]
torch = ["torch", "safetensors"]
typing = ["typing-extensions (>=4.8.0)", "types-pyyaml", "types-requests", "types-simplejson", "types-toml", "types-tqdm", "types-urllib3"]

[[package]]
name = "idna"
version = "3.6"
description = "Internationalized Domain Names in Applications (IDNA)"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "imageio"
version = "2.34.0"
description = "Library for reading and writing a wide range of image, video, scientific, and volumetric data formats."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = "*"
pillow = ">=8.3.2"

[package.extras]
all-plugins = ["astropy", "av", "imageio-ffmpeg", "pillow-heif", "psutil", "tifffile"]
all-plugins-pypy = ["av", "imageio-ffmpeg", "pillow-heif", "psutil", "tifffile"]
build = ["wheel"]
dev = ["pytest", "pytest-cov", "fsspec", "black", "flake8"]
docs = ["sphinx (<6)", "numpydoc", "pydata-sphinx-theme"]
ffmpeg = ["imageio-ffmpeg", "psutil"]
fits = ["astropy"]
full = ["astropy", "av", "black", "flake8", "fsspec", "gdal", "imageio-ffmpeg", "itk", "numpydoc", "pillow-heif", "psutil", "pydata-sphinx-theme", "pytest", "pytest-cov", "sphinx (<6)", "tifffile", "wheel"]
gdal = ["gdal"]
itk = ["itk"]
linting = ["black", "flake8"]
pillow-heif = ["pillow-heif"]
pyav = ["av"]
test = ["pytest", "pytest-cov", "fsspec"]
tifffile = ["tifffile"]

[[package]]
name = "importlib-resources"
version = "6.4.0"
description = "Read resources from Python packages"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
docs = ["sphinx (>=3.5)", "sphinx (<7.2.5)", "jaraco.packaging (>=9.3)", "rst.linker (>=1.9)", "furo", "sphinx-lint", "jaraco.tidelift (>=1.4)"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-cov", "pytest-enabler (>=2.2)", "pytest-ruff (>=0.2.1)", "zipp (>=3.17)", "jaraco.test (>=5.4)", "pytest-mypy"]

[[package]]
name = "indexed-gzip"
version = "1.8.7"
description = "Fast random access of gzip files in Python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
test = ["pytest", "numpy", "nibabel", "coverage", "pytest-cov", "cython-coverage"]

[[package]]
name = "interface-meta"
version = "1.3.0"
description = "`interface_meta` provides a convenient way to expose an extensible API with enforced method signatures and consistent documentation."
category = "main"
optional = false
python-versions = ">=3.7,<4.0"

[[package]]
name = "ipykernel"
version = "6.28.0"
description = "IPython Kernel for Jupyter"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
appnope = {version = "*", markers = "platform_system == \"Darwin\""}
comm = ">=0.1.1"
debugpy = ">=1.6.5"
ipython = ">=7.23.1"
jupyter-client = ">=6.1.12"
jupyter-core = ">=4.12,<5.0.0 || >=5.1.0"
matplotlib-inline = ">=0.1"
nest-asyncio = "*"
packaging = "*"
psutil = "*"
pyzmq = ">=24"
tornado = ">=6.1"
traitlets = ">=5.4.0"

[package.extras]
cov = ["coverage", "curio", "matplotlib", "pytest-cov", "trio"]
docs = ["myst-parser", "pydata-sphinx-theme", "sphinx", "sphinx-autodoc-typehints", "sphinxcontrib-github-alt", "sphinxcontrib-spelling", "trio"]
pyqt5 = ["pyqt5"]
pyside6 = ["pyside6"]
test = ["flaky", "ipyparallel", "pre-commit", "pytest-asyncio", "pytest-cov", "pytest-timeout", "pytest (>=7.0)"]

[[package]]
name = "ipython"
version = "8.20.0"
description = "IPython: Productive Interactive Computing"
category = "dev"
optional = false
python-versions = ">=3.10"

[package.dependencies]
colorama = {version = "*", markers = "sys_platform == \"win32\""}
decorator = "*"
exceptiongroup = {version = "*", markers = "python_version < \"3.11\""}
jedi = ">=0.16"
matplotlib-inline = "*"
pexpect = {version = ">4.3", markers = "sys_platform != \"win32\""}
prompt-toolkit = ">=3.0.41,<3.1.0"
pygments = ">=2.4.0"
stack-data = "*"
traitlets = ">=5"

[package.extras]
all = ["black", "ipykernel", "setuptools (>=18.5)", "sphinx (>=1.3)", "sphinx-rtd-theme", "docrepr", "matplotlib", "stack-data", "pytest", "typing-extensions", "exceptiongroup", "pytest-asyncio (<0.22)", "testpath", "pickleshare", "nbconvert", "nbformat", "ipywidgets", "notebook", "ipyparallel", "qtconsole", "curio", "matplotlib (!=3.2.0)", "numpy (>=1.23)", "pandas", "trio"]
black = ["black"]
doc = ["ipykernel", "setuptools (>=18.5)", "sphinx (>=1.3)", "sphinx-rtd-theme", "docrepr", "matplotlib", "stack-data", "pytest", "typing-extensions", "exceptiongroup", "pytest-asyncio (<0.22)", "testpath", "pickleshare"]
kernel = ["ipykernel"]
nbconvert = ["nbconvert"]
nbformat = ["nbformat"]
notebook = ["ipywidgets", "notebook"]
parallel = ["ipyparallel"]
qtconsole = ["qtconsole"]
test = ["pytest", "pytest-asyncio (<0.22)", "testpath", "pickleshare"]
test_extra = ["pytest", "pytest-asyncio (<0.22)", "testpath", "pickleshare", "curio", "matplotlib (!=3.2.0)", "nbformat", "numpy (>=1.23)", "pandas", "trio"]

[[package]]
name = "ipywidgets"
version = "8.1.1"
description = "Jupyter interactive widgets"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
comm = ">=0.1.3"
ipython = ">=6.1.0"
jupyterlab-widgets = ">=3.0.9,<3.1.0"
traitlets = ">=4.3.1"
widgetsnbextension = ">=4.0.9,<4.1.0"

[package.extras]
test = ["jsonschema", "ipykernel", "pytest (>=3.6.0)", "pytest-cov", "pytz"]

[[package]]
name = "isodate"
version = "0.6.1"
description = "An ISO 8601 date/time/duration parser and formatter"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"

[[package]]
name = "isoduration"
version = "20.11.0"
description = "Operations with ISO 8601 durations"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
arrow = ">=0.15.0"

[[package]]
name = "jedi"
version = "0.19.1"
description = "An autocompletion tool for Python that can be used for text editors."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
parso = ">=0.8.3,<0.9.0"

[package.extras]
docs = ["Jinja2 (==2.11.3)", "MarkupSafe (==1.1.1)", "Pygments (==2.8.1)", "alabaster (==0.7.12)", "babel (==2.9.1)", "chardet (==4.0.0)", "commonmark (==0.8.1)", "docutils (==0.17.1)", "future (==0.18.2)", "idna (==2.10)", "imagesize (==1.2.0)", "mock (==1.0.1)", "packaging (==20.9)", "pyparsing (==2.4.7)", "pytz (==2021.1)", "readthedocs-sphinx-ext (==2.1.4)", "recommonmark (==0.5.0)", "requests (==2.25.1)", "six (==1.15.0)", "snowballstemmer (==2.1.0)", "sphinx-rtd-theme (==0.4.3)", "sphinx (==1.8.5)", "sphinxcontrib-serializinghtml (==1.1.4)", "sphinxcontrib-websupport (==1.2.4)", "urllib3 (==1.26.4)"]
qa = ["flake8 (==5.0.4)", "mypy (==0.971)", "types-setuptools (==67.2.0.1)"]
testing = ["django", "attrs", "colorama", "docopt", "pytest (<7.0.0)"]

[[package]]
name = "jinja2"
version = "3.1.2"
description = "A very fast and expressive template engine."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
MarkupSafe = ">=2.0"

[package.extras]
i18n = ["Babel (>=2.7)"]

[[package]]
name = "joblib"
version = "1.3.2"
description = "Lightweight pipelining with Python functions"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "json5"
version = "0.9.14"
description = "A Python implementation of the JSON5 data format."
category = "dev"
optional = false
python-versions = "*"

[package.extras]
dev = ["hypothesis"]

[[package]]
name = "jsonpointer"
version = "2.4"
description = "Identify specific nodes in a JSON document (RFC 6901)"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, !=3.6.*"

[[package]]
name = "jsonschema"
version = "4.20.0"
description = "An implementation of JSON Schema validation for Python"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
attrs = ">=22.2.0"
fqdn = {version = "*", optional = true, markers = "extra == \"format-nongpl\""}
idna = {version = "*", optional = true, markers = "extra == \"format-nongpl\""}
isoduration = {version = "*", optional = true, markers = "extra == \"format-nongpl\""}
jsonpointer = {version = ">1.13", optional = true, markers = "extra == \"format-nongpl\""}
jsonschema-specifications = ">=2023.03.6"
referencing = ">=0.28.4"
rfc3339-validator = {version = "*", optional = true, markers = "extra == \"format-nongpl\""}
rfc3986-validator = {version = ">0.1.0", optional = true, markers = "extra == \"format-nongpl\""}
rpds-py = ">=0.7.1"
uri-template = {version = "*", optional = true, markers = "extra == \"format-nongpl\""}
webcolors = {version = ">=1.11", optional = true, markers = "extra == \"format-nongpl\""}

[package.extras]
format = ["fqdn", "idna", "isoduration", "jsonpointer (>1.13)", "rfc3339-validator", "rfc3987", "uri-template", "webcolors (>=1.11)"]
format-nongpl = ["fqdn", "idna", "isoduration", "jsonpointer (>1.13)", "rfc3339-validator", "rfc3986-validator (>0.1.0)", "uri-template", "webcolors (>=1.11)"]

[[package]]
name = "jsonschema-specifications"
version = "2023.12.1"
description = "The JSON Schema meta-schemas and vocabularies, exposed as a Registry"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
referencing = ">=0.31.0"

[[package]]
name = "jupyter"
version = "1.0.0"
description = "Jupyter metapackage. Install all the Jupyter components in one go."
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
ipykernel = "*"
ipywidgets = "*"
jupyter-console = "*"
nbconvert = "*"
notebook = "*"
qtconsole = "*"

[[package]]
name = "jupyter-client"
version = "8.6.0"
description = "Jupyter protocol implementation and client libraries"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
jupyter-core = ">=4.12,<5.0.0 || >=5.1.0"
python-dateutil = ">=2.8.2"
pyzmq = ">=23.0"
tornado = ">=6.2"
traitlets = ">=5.3"

[package.extras]
docs = ["ipykernel", "myst-parser", "pydata-sphinx-theme", "sphinx-autodoc-typehints", "sphinx (>=4)", "sphinxcontrib-github-alt", "sphinxcontrib-spelling"]
test = ["coverage", "ipykernel (>=6.14)", "mypy", "paramiko", "pre-commit", "pytest", "pytest-cov", "pytest-jupyter[client] (>=0.4.1)", "pytest-timeout"]

[[package]]
name = "jupyter-console"
version = "6.6.3"
description = "Jupyter terminal console"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
ipykernel = ">=6.14"
ipython = "*"
jupyter-client = ">=7.0.0"
jupyter-core = ">=4.12,<5.0.0 || >=5.1.0"
prompt-toolkit = ">=3.0.30"
pygments = "*"
pyzmq = ">=17"
traitlets = ">=5.4"

[package.extras]
test = ["flaky", "pexpect", "pytest"]

[[package]]
name = "jupyter-core"
version = "5.7.1"
description = "Jupyter core package. A base package on which Jupyter projects rely."
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
platformdirs = ">=2.5"
pywin32 = {version = ">=300", markers = "sys_platform == \"win32\" and platform_python_implementation != \"PyPy\""}
traitlets = ">=5.3"

[package.extras]
docs = ["myst-parser", "pydata-sphinx-theme", "sphinx-autodoc-typehints", "sphinxcontrib-github-alt", "sphinxcontrib-spelling", "traitlets"]
test = ["ipykernel", "pre-commit", "pytest", "pytest-cov", "pytest-timeout"]

[[package]]
name = "jupyter-events"
version = "0.9.0"
description = "Jupyter Event System library"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
jsonschema = {version = ">=4.18.0", extras = ["format-nongpl"]}
python-json-logger = ">=2.0.4"
pyyaml = ">=5.3"
referencing = "*"
rfc3339-validator = "*"
rfc3986-validator = ">=0.1.1"
traitlets = ">=5.3"

[package.extras]
cli = ["click", "rich"]
docs = ["jupyterlite-sphinx", "myst-parser", "pydata-sphinx-theme", "sphinxcontrib-spelling"]
test = ["click", "pre-commit", "pytest-asyncio (>=0.19.0)", "pytest-console-scripts", "pytest (>=7.0)", "rich"]

[[package]]
name = "jupyter-lsp"
version = "2.2.1"
description = "Multi-Language Server WebSocket proxy for Jupyter Notebook/Lab server"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
jupyter-server = ">=1.1.2"

[[package]]
name = "jupyter-server"
version = "2.12.3"
description = "The backend—i.e. core services, APIs, and REST endpoints—to Jupyter web applications."
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
anyio = ">=3.1.0"
argon2-cffi = "*"
jinja2 = "*"
jupyter-client = ">=7.4.4"
jupyter-core = ">=4.12,<5.0.0 || >=5.1.0"
jupyter-events = ">=0.9.0"
jupyter-server-terminals = "*"
nbconvert = ">=6.4.4"
nbformat = ">=5.3.0"
overrides = "*"
packaging = "*"
prometheus-client = "*"
pywinpty = {version = "*", markers = "os_name == \"nt\""}
pyzmq = ">=24"
send2trash = ">=1.8.2"
terminado = ">=0.8.3"
tornado = ">=6.2.0"
traitlets = ">=5.6.0"
websocket-client = "*"

[package.extras]
docs = ["ipykernel", "jinja2", "jupyter-client", "jupyter-server", "myst-parser", "nbformat", "prometheus-client", "pydata-sphinx-theme", "send2trash", "sphinx-autodoc-typehints", "sphinxcontrib-github-alt", "sphinxcontrib-openapi (>=0.8.0)", "sphinxcontrib-spelling", "sphinxemoji", "tornado", "typing-extensions"]
test = ["flaky", "ipykernel", "pre-commit", "pytest-console-scripts", "pytest-jupyter[server] (>=0.4)", "pytest-timeout", "pytest (>=7.0)", "requests"]

[[package]]
name = "jupyter-server-terminals"
version = "0.5.1"
description = "A Jupyter Server Extension Providing Terminals."
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
pywinpty = {version = ">=2.0.3", markers = "os_name == \"nt\""}
terminado = ">=0.8.3"

[package.extras]
docs = ["jinja2", "jupyter-server", "mistune (<4.0)", "myst-parser", "nbformat", "packaging", "pydata-sphinx-theme", "sphinxcontrib-github-alt", "sphinxcontrib-openapi", "sphinxcontrib-spelling", "sphinxemoji", "tornado"]
test = ["jupyter-server (>=2.0.0)", "pytest-jupyter[server] (>=0.5.3)", "pytest-timeout", "pytest (>=7.0)"]

[[package]]
name = "jupyterlab"
version = "4.0.10"
description = "JupyterLab computational environment"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
async-lru = ">=1.0.0"
ipykernel = "*"
jinja2 = ">=3.0.3"
jupyter-core = "*"
jupyter-lsp = ">=2.0.0"
jupyter-server = ">=2.4.0,<3"
jupyterlab-server = ">=2.19.0,<3"
notebook-shim = ">=0.2"
packaging = "*"
tomli = {version = "*", markers = "python_version < \"3.11\""}
tornado = ">=6.2.0"
traitlets = "*"

[package.extras]
dev = ["build", "bump2version", "coverage", "hatch", "pre-commit", "pytest-cov", "ruff (==0.1.6)"]
docs = ["jsx-lexer", "myst-parser", "pydata-sphinx-theme (>=0.13.0)", "pytest", "pytest-check-links", "pytest-tornasync", "sphinx-copybutton", "sphinx (>=1.8,<7.2.0)"]
docs-screenshots = ["altair (==5.0.1)", "ipython (==8.14.0)", "ipywidgets (==8.0.6)", "jupyterlab-geojson (==3.4.0)", "jupyterlab-language-pack-zh-cn (==4.0.post0)", "matplotlib (==3.7.1)", "nbconvert (>=7.0.0)", "pandas (==2.0.2)", "scipy (==1.10.1)", "vega-datasets (==0.9.0)"]
test = ["coverage", "pytest-check-links (>=0.7)", "pytest-console-scripts", "pytest-cov", "pytest-jupyter (>=0.5.3)", "pytest-timeout", "pytest-tornasync", "pytest (>=7.0)", "requests", "requests-cache", "virtualenv"]

[[package]]
name = "jupyterlab-pygments"
version = "0.3.0"
description = "Pygments theme using JupyterLab CSS variables"
category = "dev"
optional = false
python-versions = ">=3.8"

[[package]]
name = "jupyterlab-server"
version = "2.25.2"
description = "A set of server components for JupyterLab and JupyterLab like applications."
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
babel = ">=2.10"
jinja2 = ">=3.0.3"
json5 = ">=0.9.0"
jsonschema = ">=4.18.0"
jupyter-server = ">=1.21,<3"
packaging = ">=21.3"
requests = ">=2.31"

[package.extras]
docs = ["autodoc-traits", "jinja2 (<3.2.0)", "mistune (<4)", "myst-parser", "pydata-sphinx-theme", "sphinx", "sphinx-copybutton", "sphinxcontrib-openapi (>0.8)"]
openapi = ["openapi-core (>=0.18.0,<0.19.0)", "ruamel-yaml"]
test = ["hatch", "ipykernel", "openapi-core (>=0.18.0,<0.19.0)", "openapi-spec-validator (>=0.6.0,<0.8.0)", "pytest-console-scripts", "pytest-cov", "pytest-jupyter[server] (>=0.6.2)", "pytest-timeout", "pytest (>=7.0)", "requests-mock", "ruamel-yaml", "sphinxcontrib-spelling", "strict-rfc3339", "werkzeug"]

[[package]]
name = "jupyterlab-widgets"
version = "3.0.9"
description = "Jupyter interactive widgets for JupyterLab"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "kiwisolver"
version = "1.4.5"
description = "A fast implementation of the Cassowary constraint solver"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "latexcodec"
version = "3.0.0"
description = "A lexer and codec to work with LaTeX code in Python."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "lazy-loader"
version = "0.3"
description = "lazy_loader"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
lint = ["pre-commit (>=3.3)"]
test = ["pytest (>=7.4)", "pytest-cov (>=4.1)"]

[[package]]
name = "lockfile"
version = "0.12.2"
description = "Platform-independent file locking module"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "looseversion"
version = "1.3.0"
description = "Version numbering for anarchists and software realists"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "lxml"
version = "5.1.0"
description = "Powerful and Pythonic XML processing library combining libxml2/libxslt with the ElementTree API."
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
cssselect = ["cssselect (>=0.7)"]
html5 = ["html5lib"]
htmlsoup = ["beautifulsoup4"]
source = ["Cython (>=3.0.7)"]

[[package]]
name = "mapca"
version = "0.0.5"
description = "Moving Average Principal Component Analysis for fMRI data"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
nibabel = ">=2.5.1"
nilearn = "*"
numpy = ">=1.16"
scikit-learn = ">=1.2"
scipy = ">=1.3.3"

[package.extras]
all = ["mapca"]
dev = ["pre-commit"]
doc = ["sphinx-argparse", "sphinx-copybutton", "sphinx-rtd-theme (>=1.2.2)", "sphinx (>=6.2.1)", "sphinxcontrib-bibtex"]
tests = ["codecov", "coverage", "flake8-black", "flake8-isort", "flake8-pyproject", "flake8 (>=3.7)", "pytest", "pytest-cov (>=4.0.0)", "requests"]

[[package]]
name = "markupsafe"
version = "2.1.3"
description = "Safely add untrusted strings to HTML/XML markup."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "matplotlib"
version = "3.8.2"
description = "Python plotting package"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
contourpy = ">=1.0.1"
cycler = ">=0.10"
fonttools = ">=4.22.0"
kiwisolver = ">=1.3.1"
numpy = ">=1.21,<2"
packaging = ">=20.0"
pillow = ">=8"
pyparsing = ">=2.3.1"
python-dateutil = ">=2.7"

[[package]]
name = "matplotlib-inline"
version = "0.1.6"
description = "Inline Matplotlib backend for Jupyter"
category = "dev"
optional = false
python-versions = ">=3.5"

[package.dependencies]
traitlets = "*"

[[package]]
name = "migas"
version = "0.4.0"
description = "A Python package to communicate with a migas server."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
ci-info = "*"

[package.extras]
dev = ["black", "isort", "pre-commit"]
test = ["looseversion", "pytest", "requests"]

[[package]]
name = "mistune"
version = "3.0.2"
description = "A sane and fast Markdown parser with useful plugins and renderers"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "mne"
version = "1.6.1"
description = "MNE-Python project for MEG and EEG data analysis."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
decorator = "*"
jinja2 = "*"
lazy-loader = ">=0.3"
matplotlib = ">=3.5.0"
numpy = ">=1.21.2"
packaging = "*"
pooch = ">=1.5"
scipy = ">=1.7.1"
tqdm = "*"

[package.extras]
dev = ["mne"]
doc = ["sphinx (>=6)", "numpydoc", "pydata-sphinx-theme (==0.13.3)", "sphinx-gallery", "sphinxcontrib-bibtex (>=2.5)", "memory-profiler", "neo", "seaborn (!=0.11.2)", "sphinx-copybutton", "sphinx-design", "sphinxcontrib-youtube", "mne-bids", "pyxdf", "mne-connectivity", "mne-gui-addons", "pygments (>=2.13)", "pytest", "graphviz", "pyzmq (!=24.0.0)", "ipython (!=8.7.0)", "selenium"]
full = ["mne", "qtpy", "PyQt6 (!=6.6.1)", "PyQt6-Qt6 (!=6.6.1)", "sip", "scikit-learn", "nibabel", "openmeeg (>=2.5.5)", "numba", "h5py", "pandas", "numexpr", "jupyter", "python-picard", "statsmodels", "joblib", "psutil", "dipy", "vtk", "nilearn", "xlrd", "imageio (>=2.6.1)", "imageio-ffmpeg (>=0.4.1)", "traitlets", "pyvista (>=0.32,!=0.35.2,!=0.38.0,!=0.38.1,!=0.38.2,!=0.38.3,!=0.38.4,!=0.38.5,!=0.38.6,!=0.42.0)", "pyvistaqt (>=0.4)", "mffpy (>=0.5.7)", "ipywidgets", "ipympl", "ipyevents", "trame", "trame-vtk", "trame-vuetify", "mne-qt-browser", "darkdetect", "qdarkstyle", "threadpoolctl", "eeglabio", "edflib-python", "pybv", "snirf", "defusedxml", "pyobjc-framework-Cocoa (>=5.2.0)"]
hdf5 = ["h5io", "pymatreader"]
test = ["pytest", "pytest-cov", "pytest-timeout", "pytest-harvest", "pytest-qt", "ruff", "numpydoc", "codespell", "check-manifest", "twine", "wheel", "pre-commit", "black", "tomli"]
test_extra = ["mne", "nitime", "nbclient", "sphinx-gallery", "eeglabio", "edflib-python", "pybv", "imageio (>=2.6.1)", "imageio-ffmpeg (>=0.4.1)", "snirf"]

[[package]]
name = "mpmath"
version = "1.3.0"
description = "Python library for arbitrary-precision floating-point arithmetic"
category = "main"
optional = false
python-versions = "*"

[package.extras]
develop = ["pytest (>=4.6)", "pycodestyle", "pytest-cov", "codecov", "wheel"]
docs = ["sphinx"]
gmpy = ["gmpy2 (>=2.1.0a4)"]
tests = ["pytest (>=4.6)"]

[[package]]
name = "multidict"
version = "6.0.5"
description = "multidict implementation"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "multiprocess"
version = "0.70.16"
description = "better multiprocessing and multithreading in Python"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
dill = ">=0.3.8"

[[package]]
name = "nbclient"
version = "0.9.0"
description = "A client library for executing notebooks. Formerly nbconvert's ExecutePreprocessor."
category = "dev"
optional = false
python-versions = ">=3.8.0"

[package.dependencies]
jupyter-client = ">=6.1.12"
jupyter-core = ">=4.12,<5.0.0 || >=5.1.0"
nbformat = ">=5.1"
traitlets = ">=5.4"

[package.extras]
dev = ["pre-commit"]
docs = ["autodoc-traits", "mock", "moto", "myst-parser", "nbclient", "sphinx-book-theme", "sphinx (>=1.7)", "sphinxcontrib-spelling"]
test = ["flaky", "ipykernel (>=6.19.3)", "ipython", "ipywidgets", "nbconvert (>=7.0.0)", "pytest-asyncio", "pytest-cov (>=4.0)", "pytest (>=7.0)", "testpath", "xmltodict"]

[[package]]
name = "nbconvert"
version = "7.14.0"
description = "Converting Jupyter Notebooks"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
beautifulsoup4 = "*"
bleach = "!=5.0.0"
defusedxml = "*"
jinja2 = ">=3.0"
jupyter-core = ">=4.7"
jupyterlab-pygments = "*"
markupsafe = ">=2.0"
mistune = ">=2.0.3,<4"
nbclient = ">=0.5.0"
nbformat = ">=5.7"
packaging = "*"
pandocfilters = ">=1.4.1"
pygments = ">=2.4.1"
tinycss2 = "*"
traitlets = ">=5.1"

[package.extras]
all = ["nbconvert"]
docs = ["ipykernel", "ipython", "myst-parser", "nbsphinx (>=0.2.12)", "pydata-sphinx-theme", "sphinx (==5.0.2)", "sphinxcontrib-spelling"]
qtpdf = ["nbconvert"]
qtpng = ["pyqtwebengine (>=5.15)"]
serve = ["tornado (>=6.1)"]
test = ["flaky", "ipykernel", "ipywidgets (>=7.5)", "pytest"]
webpdf = ["playwright"]

[[package]]
name = "nbformat"
version = "5.9.2"
description = "The Jupyter Notebook format"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
fastjsonschema = "*"
jsonschema = ">=2.6"
jupyter-core = "*"
traitlets = ">=5.1"

[package.extras]
docs = ["myst-parser", "pydata-sphinx-theme", "sphinx", "sphinxcontrib-github-alt", "sphinxcontrib-spelling"]
test = ["pep440", "pre-commit", "pytest", "testpath"]

[[package]]
name = "nest-asyncio"
version = "1.5.8"
description = "Patch asyncio to allow nested event loops"
category = "dev"
optional = false
python-versions = ">=3.5"

[[package]]
name = "networkx"
version = "3.2.1"
description = "Python package for creating and manipulating graphs and networks"
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
default = ["numpy (>=1.22)", "scipy (>=1.9,!=1.11.0,!=1.11.1)", "matplotlib (>=3.5)", "pandas (>=1.4)"]
developer = ["changelist (==0.4)", "pre-commit (>=3.2)", "mypy (>=1.1)", "rtoml"]
doc = ["sphinx (>=7)", "pydata-sphinx-theme (>=0.14)", "sphinx-gallery (>=0.14)", "numpydoc (>=1.6)", "pillow (>=9.4)", "nb2plots (>=0.7)", "texext (>=0.6.7)", "nbconvert (<7.9)"]
extra = ["lxml (>=4.6)", "pygraphviz (>=1.11)", "pydot (>=1.4.2)", "sympy (>=1.10)"]
test = ["pytest (>=7.2)", "pytest-cov (>=4.0)"]

[[package]]
name = "nibabel"
version = "5.2.0"
description = "Access a multitude of neuroimaging data formats"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = ">=1.20"
packaging = ">=17"

[package.extras]
all = ["nibabel"]
dev = ["tox"]
dicom = ["pydicom (>=1.0.0)"]
dicomfs = ["nibabel", "pillow"]
doc = ["matplotlib (>=1.5.3)", "numpydoc", "sphinx", "texext", "tomli"]
doctest = ["tox"]
minc2 = ["h5py"]
spm = ["scipy"]
style = ["tox"]
test = ["pytest", "pytest-cov", "pytest-doctestplus", "pytest-httpserver", "pytest-xdist"]
typing = ["tox"]
zstd = ["pyzstd (>=0.14.3)"]

[[package]]
name = "nilearn"
version = "0.10.2"
description = "Statistical learning for neuroimaging in Python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
joblib = ">=1.0.0"
lxml = "*"
nibabel = ">=3.2.0"
numpy = ">=1.19.0"
packaging = "*"
pandas = ">=1.1.5"
requests = ">=2.25.0"
scikit-learn = ">=1.0.0"
scipy = ">=1.6.0"

[package.extras]
dev = ["black", "blacken-docs", "codespell", "flake8", "flake8-docstrings", "flake8-functions", "flake8-use-fstring", "flynt", "isort", "nilearn", "pre-commit", "tomli"]
doc = ["furo", "memory-profiler", "myst-parser", "nilearn", "numpydoc", "ruamel-yaml", "sphinx-copybutton", "sphinx-design", "sphinx-gallery", "sphinx (<7.2.0)", "sphinxcontrib-bibtex", "sphinxext-opengraph"]
min = ["joblib (==1.0.0)", "nibabel (==3.2.0)", "numpy (==1.19.0)", "pandas (==1.1.5)", "scikit-learn (==1.0.0)", "scipy (==1.6.0)"]
plotly = ["kaleido", "plotly"]
plotmin = ["matplotlib (==3.3.0)"]
plotting = ["matplotlib (>=3.3.0)"]
test = ["coverage", "pytest-cov", "pytest (>=6.0.0)"]

[[package]]
name = "nipype"
version = "1.8.6"
description = "Neuroimaging in Python: Pipelines and Interfaces"
category = "main"
optional = false
python-versions = ">= 3.7"

[package.dependencies]
click = ">=6.6.0"
etelemetry = ">=0.2.0"
filelock = ">=3.0.0"
looseversion = "*"
networkx = ">=2.0"
nibabel = ">=2.1.0"
numpy = ">=1.17"
packaging = "*"
prov = ">=1.5.2"
pydot = ">=1.2.3"
python-dateutil = ">=2.2"
rdflib = ">=5.0.0"
scipy = ">=0.14"
simplejson = ">=3.8.0"
traits = ">=4.6,<5.0 || >5.0,<6.4"

[package.extras]
all = ["codecov", "ipython", "matplotlib", "nbsphinx", "dipy", "pytest-cov", "sphinx-argparse", "paramiko", "duecredit", "coverage (<5)", "sphinx (>=2.1.2)", "xvfbwrapper", "fuzzywuzzy", "nitime", "pytest", "pytest-doctestplus", "black", "pytest-env", "datalad", "pytest-timeout", "gitpython", "psutil (>=5.0)", "nipy", "sphinx", "sphinxcontrib-apidoc", "nilearn", "pybids (>=0.7.0)"]
data = ["datalad"]
dev = ["codecov", "pytest", "pytest-doctestplus", "black", "ipython", "coverage (<5)", "sphinx", "matplotlib", "sphinxcontrib-apidoc", "pytest-env", "nbsphinx", "dipy", "pytest-cov", "pytest-timeout", "sphinx (>=2.1.2)", "sphinx-argparse"]
doc = ["dipy", "ipython", "matplotlib", "nbsphinx", "sphinx-argparse", "sphinx (>=2.1.2)", "sphinxcontrib-apidoc"]
duecredit = ["duecredit"]
maint = ["gitpython", "fuzzywuzzy"]
nipy = ["nitime", "nilearn", "dipy", "nipy", "matplotlib"]
profiler = ["psutil (>=5.0)"]
pybids = ["pybids (>=0.7.0)"]
specs = ["black"]
ssh = ["paramiko"]
tests = ["codecov", "coverage (<5)", "pytest", "pytest-cov", "pytest-env", "pytest-timeout", "pytest-doctestplus", "sphinx"]
xvfbwrapper = ["xvfbwrapper"]

[[package]]
name = "nireports"
version = "23.2.0"
description = "NiReports - The Visual Report System (VRS) of NiPreps"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
importlib-resources = {version = ">=5.12", markers = "python_version < \"3.12\""}
matplotlib = ">=3.4.2"
nibabel = ">=3.0.1"
nilearn = ">=0.5.2"
nipype = "*"
numpy = "*"
pandas = "*"
pybids = "*"
pyyaml = "*"
seaborn = "*"
svgutils = ">=0.3.4"
templateflow = "*"

[package.extras]
all = ["nireports"]
dev = ["black (>=22.3.0,<22.4.0)", "flake8-pyproject", "isort (>=5.10.1,<5.11.0)", "pre-commit"]
doc = ["furo (>=2021.10.09,<2021.11.0)", "pydot (>=1.2.3)", "pydotplus", "sphinxcontrib-apidoc", "sphinxcontrib-napoleon", "sphinx (>=4.0,<5.0)"]
docs = ["nireports"]
test = ["coverage", "matplotlib", "pytest", "pytest-cov", "pytest-env", "pytest-xdist", "sphinx"]
tests = ["nireports"]

[[package]]
name = "nistats"
version = "0.0.1rc0"
description = "Modeling and Statistical analysis of fMRI data in Python"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
nibabel = ">=2.0.2"
nilearn = ">=0.4"
numpy = ">=1.11"
pandas = ">=0.18.0"
scikit-learn = ">=0.18"
scipy = ">=0.17"

[[package]]
name = "nitime"
version = "0.10.2"
description = "Nitime: timeseries analysis for neuroscience data"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
matplotlib = ">=3.5"
numpy = ">=1.22"
scipy = ">=1.8"

[package.extras]
full = ["networkx (>=2.7)", "nibabel (>=4.0)"]

[[package]]
name = "nitransforms"
version = "23.0.1"
description = "NiTransforms -- Neuroimaging spatial transforms in Python."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
h5py = "*"
nibabel = ">=3.0"
numpy = {version = ">=1.21,<2.0", markers = "python_version > \"3.7\""}
scipy = {version = ">=1.6,<2.0", markers = "python_version > \"3.7\""}

[package.extras]
all = ["lxml", "pytest", "pytest-cov", "codecov"]
niftiext = ["lxml"]
niftiexts = ["lxml"]
test = ["pytest", "pytest-cov", "codecov"]
tests = ["pytest", "pytest-cov", "codecov"]

[[package]]
name = "niworkflows"
version = "1.10.1"
description = "NeuroImaging Workflows provides processing tools for magnetic resonance images of the brain."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
attrs = "*"
importlib-resources = {version = ">=5.7", markers = "python_version < \"3.11\""}
jinja2 = "*"
looseversion = "*"
matplotlib = ">=3.4.2"
nibabel = ">=3.0"
nilearn = ">=0.5.2"
nipype = ">=1.8.5"
nitransforms = ">=21.0.0"
numpy = "*"
packaging = "*"
pandas = "*"
pybids = ">=0.15.1"
pyyaml = "*"
scikit-image = "*"
scipy = "*"
seaborn = "*"
svgutils = ">=0.3.4"
templateflow = ">=0.7.2"
traits = "<6.4"
transforms3d = "*"

[package.extras]
all = ["niworkflows"]
doc = ["furo", "pydot (>=1.2.3)", "pydotplus", "sphinx", "sphinxcontrib-apidoc", "sphinxcontrib-napoleon"]
docs = ["niworkflows"]
pointclouds = ["pyntcloud"]
style = ["flake8 (>=3.7.0)"]
tests = ["coverage (>=5.2.1)", "pytest-cov", "pytest-env", "pytest-xdist (>=1.28)", "pytest-xvfb", "pytest (>=4.4)"]

[[package]]
name = "notebook"
version = "7.0.6"
description = "Jupyter Notebook - A web-based notebook environment for interactive computing"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
jupyter-server = ">=2.4.0,<3"
jupyterlab = ">=4.0.2,<5"
jupyterlab-server = ">=2.22.1,<3"
notebook-shim = ">=0.2,<0.3"
tornado = ">=6.2.0"

[package.extras]
dev = ["hatch", "pre-commit"]
docs = ["myst-parser", "nbsphinx", "pydata-sphinx-theme", "sphinx (>=1.3.6)", "sphinxcontrib-github-alt", "sphinxcontrib-spelling"]
test = ["importlib-resources (>=5.0)", "ipykernel", "jupyter-server[test] (>=2.4.0,<3)", "jupyterlab-server[test] (>=2.22.1,<3)", "nbval", "pytest-console-scripts", "pytest-timeout", "pytest-tornasync", "pytest (>=7.0)", "requests"]

[[package]]
name = "notebook-shim"
version = "0.2.3"
description = "A shim layer for notebook traits and config"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
jupyter-server = ">=1.8,<3"

[package.extras]
test = ["pytest", "pytest-console-scripts", "pytest-jupyter", "pytest-tornasync"]

[[package]]
name = "num2words"
version = "0.5.13"
description = "Modules to convert numbers to words. Easily extensible."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
docopt = ">=0.6.2"

[[package]]
name = "numpy"
version = "1.26.3"
description = "Fundamental package for array computing in Python"
category = "main"
optional = false
python-versions = ">=3.9"

[[package]]
name = "nvidia-cublas-cu12"
version = "12.1.3.1"
description = "CUBLAS native runtime libraries"
category = "main"
optional = false
python-versions = ">=3"

[[package]]
name = "nvidia-cuda-cupti-cu12"
version = "12.1.105"
description = "CUDA profiling tools runtime libs."
category = "main"
optional = false
python-versions = ">=3"

[[package]]
name = "nvidia-cuda-nvrtc-cu12"
version = "12.1.105"
description = "NVRTC native runtime libraries"
category = "main"
optional = false
python-versions = ">=3"

[[package]]
name = "nvidia-cuda-runtime-cu12"
version = "12.1.105"
description = "CUDA Runtime native Libraries"
category = "main"
optional = false
python-versions = ">=3"

[[package]]
name = "nvidia-cudnn-cu12"
version = "8.9.2.26"
description = "cuDNN runtime libraries"
category = "main"
optional = false
python-versions = ">=3"

[package.dependencies]
nvidia-cublas-cu12 = "*"

[[package]]
name = "nvidia-cufft-cu12"
version = "11.0.2.54"
description = "CUFFT native runtime libraries"
category = "main"
optional = false
python-versions = ">=3"

[[package]]
name = "nvidia-curand-cu12"
version = "10.3.2.106"
description = "CURAND native runtime libraries"
category = "main"
optional = false
python-versions = ">=3"

[[package]]
name = "nvidia-cusolver-cu12"
version = "11.4.5.107"
description = "CUDA solver native runtime libraries"
category = "main"
optional = false
python-versions = ">=3"

[package.dependencies]
nvidia-cublas-cu12 = "*"
nvidia-cusparse-cu12 = "*"
nvidia-nvjitlink-cu12 = "*"

[[package]]
name = "nvidia-cusparse-cu12"
version = "12.1.0.106"
description = "CUSPARSE native runtime libraries"
category = "main"
optional = false
python-versions = ">=3"

[package.dependencies]
nvidia-nvjitlink-cu12 = "*"

[[package]]
name = "nvidia-nccl-cu12"
version = "2.19.3"
description = "NVIDIA Collective Communication Library (NCCL) Runtime"
category = "main"
optional = false
python-versions = ">=3"

[[package]]
name = "nvidia-nvjitlink-cu12"
version = "12.4.99"
description = "Nvidia JIT LTO Library"
category = "main"
optional = false
python-versions = ">=3"

[[package]]
name = "nvidia-nvtx-cu12"
version = "12.1.105"
description = "NVIDIA Tools Extension"
category = "main"
optional = false
python-versions = ">=3"

[[package]]
name = "overrides"
version = "7.4.0"
description = "A decorator to automatically detect mismatch when overriding a method."
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "packaging"
version = "23.2"
description = "Core utilities for Python packages"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "pandas"
version = "2.1.4"
description = "Powerful data structures for data analysis, time series, and statistics"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
numpy = [
    {version = ">=1.22.4,<2", markers = "python_version < \"3.11\""},
    {version = ">=1.23.2,<2", markers = "python_version == \"3.11\""},
    {version = ">=1.26.0,<2", markers = "python_version >= \"3.12\""},
]
python-dateutil = ">=2.8.2"
pytz = ">=2020.1"
tzdata = ">=2022.1"

[package.extras]
test = ["hypothesis (>=6.46.1)", "pytest (>=7.3.2)", "pytest-xdist (>=2.2.0)"]
performance = ["bottleneck (>=1.3.4)", "numba (>=0.55.2)", "numexpr (>=2.8.0)"]
computation = ["scipy (>=1.8.1)", "xarray (>=2022.03.0)"]
fss = ["fsspec (>=2022.05.0)"]
aws = ["s3fs (>=2022.05.0)"]
gcp = ["gcsfs (>=2022.05.0)", "pandas-gbq (>=0.17.5)"]
excel = ["odfpy (>=1.4.1)", "openpyxl (>=3.0.10)", "pyxlsb (>=1.0.9)", "xlrd (>=2.0.1)", "xlsxwriter (>=3.0.3)"]
parquet = ["pyarrow (>=7.0.0)"]
feather = ["pyarrow (>=7.0.0)"]
hdf5 = ["tables (>=3.7.0)"]
spss = ["pyreadstat (>=1.1.5)"]
postgresql = ["SQLAlchemy (>=1.4.36)", "psycopg2 (>=2.9.3)"]
mysql = ["SQLAlchemy (>=1.4.36)", "pymysql (>=1.0.2)"]
sql-other = ["SQLAlchemy (>=1.4.36)"]
html = ["beautifulsoup4 (>=4.11.1)", "html5lib (>=1.1)", "lxml (>=4.8.0)"]
xml = ["lxml (>=4.8.0)"]
plot = ["matplotlib (>=3.6.1)"]
output-formatting = ["jinja2 (>=3.1.2)", "tabulate (>=0.8.10)"]
clipboard = ["PyQt5 (>=5.15.6)", "qtpy (>=2.2.0)"]
compression = ["zstandard (>=0.17.0)"]
consortium-standard = ["dataframe-api-compat (>=0.1.7)"]
all = ["beautifulsoup4 (>=4.11.1)", "bottleneck (>=1.3.4)", "dataframe-api-compat (>=0.1.7)", "fastparquet (>=0.8.1)", "fsspec (>=2022.05.0)", "gcsfs (>=2022.05.0)", "html5lib (>=1.1)", "hypothesis (>=6.46.1)", "jinja2 (>=3.1.2)", "lxml (>=4.8.0)", "matplotlib (>=3.6.1)", "numba (>=0.55.2)", "numexpr (>=2.8.0)", "odfpy (>=1.4.1)", "openpyxl (>=3.0.10)", "pandas-gbq (>=0.17.5)", "psycopg2 (>=2.9.3)", "pyarrow (>=7.0.0)", "pymysql (>=1.0.2)", "PyQt5 (>=5.15.6)", "pyreadstat (>=1.1.5)", "pytest (>=7.3.2)", "pytest-xdist (>=2.2.0)", "pyxlsb (>=1.0.9)", "qtpy (>=2.2.0)", "scipy (>=1.8.1)", "s3fs (>=2022.05.0)", "SQLAlchemy (>=1.4.36)", "tables (>=3.7.0)", "tabulate (>=0.8.10)", "xarray (>=2022.03.0)", "xlrd (>=2.0.1)", "xlsxwriter (>=3.0.3)", "zstandard (>=0.17.0)"]

[[package]]
name = "pandocfilters"
version = "1.5.0"
description = "Utilities for writing pandoc filters in python"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "parso"
version = "0.8.3"
description = "A Python Parser"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.extras]
qa = ["flake8 (==3.8.3)", "mypy (==0.782)"]
testing = ["docopt", "pytest (<6.0.0)"]

[[package]]
name = "pexpect"
version = "4.9.0"
description = "Pexpect allows easy control of interactive console applications."
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
ptyprocess = ">=0.5"

[[package]]
name = "pillow"
version = "10.2.0"
description = "Python Imaging Library (Fork)"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
docs = ["furo", "olefile", "sphinx (>=2.4)", "sphinx-copybutton", "sphinx-inline-tabs", "sphinx-removed-in", "sphinxext-opengraph"]
fpx = ["olefile"]
mic = ["olefile"]
tests = ["check-manifest", "coverage", "defusedxml", "markdown2", "olefile", "packaging", "pyroma", "pytest", "pytest-cov", "pytest-timeout"]
typing = ["typing-extensions"]
xmp = ["defusedxml"]

[[package]]
name = "platformdirs"
version = "4.1.0"
description = "A small Python package for determining appropriate platform-specific dirs, e.g. a \"user data dir\"."
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
docs = ["furo (>=2023.7.26)", "proselint (>=0.13)", "sphinx-autodoc-typehints (>=1.24)", "sphinx (>=7.1.1)"]
test = ["appdirs (==1.4.4)", "covdefaults (>=2.3)", "pytest-cov (>=4.1)", "pytest-mock (>=3.11.1)", "pytest (>=7.4)"]

[[package]]
name = "pooch"
version = "1.8.1"
description = "\"Pooch manages your Python library's sample data files: it automatically downloads and stores them in a local directory, with support for versioning and corruption checks.\""
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
packaging = ">=20.0"
platformdirs = ">=2.5.0"
requests = ">=2.19.0"

[package.extras]
progress = ["tqdm (>=4.41.0,<5.0.0)"]
sftp = ["paramiko (>=2.7.0)"]
xxhash = ["xxhash (>=1.4.3)"]

[[package]]
name = "prometheus-client"
version = "0.19.0"
description = "Python client for the Prometheus monitoring system."
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
twisted = ["twisted"]

[[package]]
name = "prompt-toolkit"
version = "3.0.43"
description = "Library for building powerful interactive command lines in Python"
category = "dev"
optional = false
python-versions = ">=3.7.0"

[package.dependencies]
wcwidth = "*"

[[package]]
name = "prov"
version = "2.0.0"
description = "A library for W3C Provenance Data Model supporting PROV-JSON, PROV-XML and PROV-O (RDF)"
category = "main"
optional = false
python-versions = ">=3.6, <4"

[package.dependencies]
lxml = ">=3.3.5"
networkx = ">=2.0"
python-dateutil = ">=2.2"
rdflib = ">=4.2.1"

[package.extras]
dot = ["pydot (>=1.2.0)"]

[[package]]
name = "psutil"
version = "5.9.7"
description = "Cross-platform lib for process and system monitoring in Python."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*"

[package.extras]
test = ["enum34", "ipaddress", "mock", "pywin32", "wmi"]

[[package]]
name = "ptyprocess"
version = "0.7.0"
description = "Run a subprocess in a pseudo terminal"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "pure-eval"
version = "0.2.2"
description = "Safely evaluate AST nodes without side effects"
category = "dev"
optional = false
python-versions = "*"

[package.extras]
tests = ["pytest"]

[[package]]
name = "py-cpuinfo"
version = "9.0.0"
description = "Get CPU info with pure Python"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyarrow"
version = "15.0.2"
description = "Python library for Apache Arrow"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = ">=1.16.6,<2"

[[package]]
name = "pyarrow-hotfix"
version = "0.6"
description = ""
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "pybids"
version = "0.16.4"
description = "bids: interface with datasets conforming to BIDS"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
bids-validator = ">=1.11"
click = ">=8.0"
formulaic = ">=0.2.4,<0.6"
nibabel = ">=3.0"
num2words = ">=0.5.5"
numpy = ">=1.19"
pandas = ">=0.25.2"
scipy = ">=1.5"
sqlalchemy = ">=1.3.16"

[package.extras]
ci_tests = ["pybids", "pytest-xdist"]
dev = ["pybids"]
doc = ["sphinx (>=2.2,!=5.1.0)", "numpydoc", "sphinx-rtd-theme", "myst-nb", "jupytext"]
docs = ["pybids"]
model_reports = ["jinja2", "altair"]
plotting = ["graphviz"]
test = ["pytest (>=3.3)", "pytest-cov", "bsmschema", "coverage", "altair"]
tests = ["pybids"]
tutorial = ["nbconvert", "jinja2", "markupsafe", "jupyter-client", "ipykernel"]

[[package]]
name = "pybtex"
version = "0.24.0"
description = "A BibTeX-compatible bibliography processor in Python"
category = "main"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*"

[package.dependencies]
latexcodec = ">=1.0.4"
PyYAML = ">=3.01"
six = "*"

[package.extras]
test = ["pytest"]

[[package]]
name = "pybtex-apa-style"
version = "1.3"
description = "Pybtex APA-like style"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pycparser"
version = "2.21"
description = "C parser in Python"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "pydot"
version = "2.0.0"
description = "Python interface to Graphviz's Dot"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
pyparsing = ">=3"

[package.extras]
dev = ["chardet", "black"]
release = ["zest.releaser"]
tests = ["chardet", "black", "tox"]

[[package]]
name = "pygments"
version = "2.17.2"
description = "Pygments is a syntax highlighting package written in Python."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
plugins = ["importlib-metadata"]
windows-terminal = ["colorama (>=0.4.6)"]

[[package]]
name = "pynvml"
version = "11.5.0"
description = "Python Bindings for the NVIDIA Management Library"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "pyparsing"
version = "3.1.1"
description = "pyparsing module - Classes and methods to define and execute parsing grammars"
category = "main"
optional = false
python-versions = ">=3.6.8"

[package.extras]
diagrams = ["railroad-diagrams", "jinja2"]

[[package]]
name = "python-dateutil"
version = "2.8.2"
description = "Extensions to the standard Python datetime module"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"

[package.dependencies]
six = ">=1.5"

[[package]]
name = "python-json-logger"
version = "2.0.7"
description = "A python library adding a json log formatter"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "pytz"
version = "2023.3.post1"
description = "World timezone definitions, modern and historical"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pywin32"
version = "306"
description = "Python for Window Extensions"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "pywinpty"
version = "2.0.12"
description = "Pseudo terminal support for Windows from Python."
category = "dev"
optional = false
python-versions = ">=3.8"

[[package]]
name = "pyyaml"
version = "6.0.1"
description = "YAML parser and emitter for Python"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "pyzmq"
version = "25.1.2"
description = "Python bindings for 0MQ"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
cffi = {version = "*", markers = "implementation_name == \"pypy\""}

[[package]]
name = "qtconsole"
version = "5.5.1"
description = "Jupyter Qt console"
category = "dev"
optional = false
python-versions = ">= 3.8"

[package.dependencies]
ipykernel = ">=4.1"
jupyter-client = ">=4.1"
jupyter-core = "*"
packaging = "*"
pygments = "*"
pyzmq = ">=17.1"
qtpy = ">=2.4.0"
traitlets = "<5.2.1 || >5.2.1,<5.2.2 || >5.2.2"

[package.extras]
doc = ["Sphinx (>=1.3)"]
test = ["flaky", "pytest", "pytest-qt"]

[[package]]
name = "qtpy"
version = "2.4.1"
description = "Provides an abstraction layer on top of the various Qt bindings (PyQt5/6 and PySide2/6)."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
packaging = "*"

[package.extras]
test = ["pytest (>=6,!=7.0.0,!=7.0.1)", "pytest-cov (>=3.0.0)", "pytest-qt"]

[[package]]
name = "rapidfuzz"
version = "3.7.0"
description = "rapid fuzzy string matching"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
full = ["numpy"]

[[package]]
name = "rdflib"
version = "7.0.0"
description = "RDFLib is a Python library for working with RDF, a simple yet powerful language for representing information."
category = "main"
optional = false
python-versions = ">=3.8.1,<4.0.0"

[package.dependencies]
isodate = ">=0.6.0,<0.7.0"
pyparsing = ">=2.1.0,<4"

[package.extras]
berkeleydb = ["berkeleydb (>=18.1.0,<19.0.0)"]
networkx = ["networkx (>=2.0.0,<3.0.0)"]
html = ["html5lib (>=1.0,<2.0)"]
lxml = ["lxml (>=4.3.0,<5.0.0)"]

[[package]]
name = "referencing"
version = "0.32.1"
description = "JSON Referencing + Python"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
attrs = ">=22.2.0"
rpds-py = ">=0.7.0"

[[package]]
name = "requests"
version = "2.31.0"
description = "Python HTTP for Humans."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
certifi = ">=2017.4.17"
charset-normalizer = ">=2,<4"
idna = ">=2.5,<4"
urllib3 = ">=1.21.1,<3"

[package.extras]
socks = ["PySocks (>=1.5.6,!=1.5.7)"]
use_chardet_on_py3 = ["chardet (>=3.0.2,<6)"]

[[package]]
name = "rfc3339-validator"
version = "0.1.4"
description = "A pure python RFC3339 validator"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.dependencies]
six = "*"

[[package]]
name = "rfc3986-validator"
version = "0.1.1"
description = "Pure python rfc3986 validator"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "rpds-py"
version = "0.16.2"
description = "Python bindings to Rust's persistent data structures (rpds)"
category = "dev"
optional = false
python-versions = ">=3.8"

[[package]]
name = "scikit-image"
version = "0.22.0"
description = "Image processing in Python"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
imageio = ">=2.27"
lazy_loader = ">=0.3"
networkx = ">=2.8"
numpy = ">=1.22"
packaging = ">=21"
pillow = ">=9.0.1"
scipy = ">=1.8"
tifffile = ">=2022.8.12"

[package.extras]
build = ["meson-python (>=0.14)", "wheel", "setuptools (>=67)", "packaging (>=21)", "ninja", "Cython (>=0.29.32)", "pythran", "numpy (>=1.22)", "spin (==0.6)", "build"]
data = ["pooch (>=1.6.0)"]
developer = ["pre-commit", "tomli"]
docs = ["sphinx (>=7.2)", "sphinx-gallery (>=0.14)", "numpydoc (>=1.6)", "sphinx-copybutton", "pytest-runner", "matplotlib (>=3.5)", "dask[array] (>=2022.9.2)", "pandas (>=1.5)", "seaborn (>=0.11)", "pooch (>=1.6)", "tifffile (>=2022.8.12)", "myst-parser", "ipywidgets", "ipykernel", "plotly (>=5.10)", "kaleido", "scikit-learn (>=1.1)", "sphinx_design (>=0.5)", "pydata-sphinx-theme (>=0.14.1)", "PyWavelets (>=1.1.1)"]
optional = ["simpleitk", "astropy (>=5.0)", "cloudpickle (>=0.2.1)", "dask[array] (>=2021.1.0)", "matplotlib (>=3.5)", "pooch (>=1.6.0)", "pyamg", "PyWavelets (>=1.1.1)", "scikit-learn (>=1.1)"]
test = ["asv", "matplotlib (>=3.5)", "numpydoc (>=1.5)", "pooch (>=1.6.0)", "pytest (>=7.0)", "pytest-cov (>=2.11.0)", "pytest-localserver", "pytest-faulthandler"]

[[package]]
name = "scikit-learn"
version = "1.3.2"
description = "A set of python modules for machine learning and data mining"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
joblib = ">=1.1.1"
numpy = ">=1.17.3,<2.0"
scipy = ">=1.5.0"
threadpoolctl = ">=2.0.0"

[package.extras]
benchmark = ["matplotlib (>=3.1.3)", "pandas (>=1.0.5)", "memory-profiler (>=0.57.0)"]
docs = ["matplotlib (>=3.1.3)", "scikit-image (>=0.16.2)", "pandas (>=1.0.5)", "seaborn (>=0.9.0)", "memory-profiler (>=0.57.0)", "sphinx (>=6.0.0)", "sphinx-copybutton (>=0.5.2)", "sphinx-gallery (>=0.10.1)", "numpydoc (>=1.2.0)", "Pillow (>=7.1.2)", "pooch (>=1.6.0)", "sphinx-prompt (>=1.3.0)", "sphinxext-opengraph (>=0.4.2)", "plotly (>=5.14.0)"]
examples = ["matplotlib (>=3.1.3)", "scikit-image (>=0.16.2)", "pandas (>=1.0.5)", "seaborn (>=0.9.0)", "pooch (>=1.6.0)", "plotly (>=5.14.0)"]
tests = ["matplotlib (>=3.1.3)", "scikit-image (>=0.16.2)", "pandas (>=1.0.5)", "pytest (>=7.1.2)", "pytest-cov (>=2.9.0)", "ruff (>=0.0.272)", "black (>=23.3.0)", "mypy (>=1.3)", "pyamg (>=4.0.0)", "numpydoc (>=1.2.0)", "pooch (>=1.6.0)"]

[[package]]
name = "scipy"
version = "1.11.4"
description = "Fundamental algorithms for scientific computing in Python"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
numpy = ">=1.21.6,<1.28.0"

[package.extras]
test = ["pytest", "pytest-cov", "pytest-timeout", "pytest-xdist", "asv", "mpmath", "gmpy2", "threadpoolctl", "scikit-umfpack", "pooch"]
doc = ["sphinx (!=4.1.0)", "pydata-sphinx-theme (==0.9.0)", "sphinx-design (>=0.2.0)", "matplotlib (>2)", "numpydoc", "jupytext", "myst-nb", "pooch"]
dev = ["mypy", "typing-extensions", "types-psutil", "pycodestyle", "ruff", "cython-lint (>=0.12.2)", "rich-click", "click", "doit (>=0.36.0)", "pydevtool"]

[[package]]
name = "sdcflows"
version = "2.8.1"
description = "Susceptibility Distortion Correction (SDC) workflows for EPI MR schemes."
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
attrs = ">=20.1.0"
migas = ">=0.4.0"
nibabel = ">=3.1.0"
nipype = ">=1.8.5,<2.0"
nitransforms = ">=23.0.1"
niworkflows = ">=1.7.0"
numpy = ">=1.21.0"
pybids = ">=0.16.4"
scikit-image = ">=0.18"
scipy = ">=1.8.1"
templateflow = "*"
toml = "*"
traits = "<6.4"

[package.extras]
all = ["sdcflows"]
dev = ["black", "flake8-pyproject", "isort", "pre-commit"]
doc = ["attrs (>=20.1.0)", "furo", "importlib-resources", "ipykernel", "ipython", "matplotlib (>=2.2.0)", "nbsphinx", "nibabel", "nipype (>=1.5.1)", "niworkflows (>=1.10.0)", "numpy", "packaging", "pandoc", "pydot (>=1.2.3)", "pydotplus", "scipy", "sphinx-argparse", "sphinx (>=7.2.2)", "sphinxcontrib-apidoc", "templateflow", "traits (<6.4)"]
docs = ["sdcflows"]
mem = ["psutil"]
test = ["coverage", "pytest", "pytest-cov", "pytest-env", "pytest-xdist"]
tests = ["sdcflows"]

[[package]]
name = "seaborn"
version = "0.13.2"
description = "Statistical data visualization"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
matplotlib = ">=3.4,<3.6.1 || >3.6.1"
numpy = ">=1.20,<1.24.0 || >1.24.0"
pandas = ">=1.2"

[package.extras]
dev = ["pytest", "pytest-cov", "pytest-xdist", "flake8", "mypy", "pandas-stubs", "pre-commit", "flit"]
docs = ["numpydoc", "nbconvert", "ipykernel", "sphinx (<6.0.0)", "sphinx-copybutton", "sphinx-issues", "sphinx-design", "pyyaml", "pydata_sphinx_theme (==0.10.0rc2)"]
stats = ["scipy (>=1.7)", "statsmodels (>=0.12)"]

[[package]]
name = "send2trash"
version = "1.8.2"
description = "Send file to trash natively under Mac OS X, Windows and Linux"
category = "dev"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"

[package.extras]
nativelib = ["pyobjc-framework-cocoa", "pywin32"]
objc = ["pyobjc-framework-cocoa"]
win32 = ["pywin32"]

[[package]]
name = "simplejson"
version = "3.19.2"
description = "Simple, fast, extensible JSON encoder/decoder for Python"
category = "main"
optional = false
python-versions = ">=2.5, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "six"
version = "1.16.0"
description = "Python 2 and 3 compatibility utilities"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "smriprep"
version = "0.15.0"
description = "Structural MRI Preprocessing Pipelines"
category = "main"
optional = false
python-versions = ">=3.10"

[package.dependencies]
indexed-gzip = ">=0.8.8"
lockfile = "*"
looseversion = "*"
matplotlib = ">=2.2.0"
nibabel = ">=4.0.1"
nipype = ">=1.7.0"
niworkflows = ">=1.10.1"
numpy = "*"
packaging = "*"
pybids = ">=0.11.1"
pyyaml = "*"
templateflow = ">=24.1"

[package.extras]
all = ["smriprep"]
datalad = ["datalad"]
doc = ["nbsphinx", "packaging", "pydot", "sphinx", "sphinx-argparse", "sphinx-rtd-theme", "sphinxcontrib-apidoc (>=0.3.0,<0.4.0)", "sphinxcontrib-napoleon", "sphinxcontrib-versioning"]
docs = ["smriprep"]
duecredit = ["duecredit"]
style = ["flake8"]
test = ["coverage", "pytest", "pytest-cov", "pytest-env"]
tests = ["smriprep"]

[[package]]
name = "sniffio"
version = "1.3.0"
description = "Sniff out which async library your code is running under"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "soupsieve"
version = "2.5"
description = "A modern CSS selector implementation for Beautiful Soup."
category = "dev"
optional = false
python-versions = ">=3.8"

[[package]]
name = "sqlalchemy"
version = "2.0.25"
description = "Database Abstraction Library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
greenlet = {version = "!=0.4.17", markers = "platform_machine == \"aarch64\" or platform_machine == \"ppc64le\" or platform_machine == \"x86_64\" or platform_machine == \"amd64\" or platform_machine == \"AMD64\" or platform_machine == \"win32\" or platform_machine == \"WIN32\""}
typing-extensions = ">=4.6.0"

[package.extras]
asyncio = ["greenlet (!=0.4.17)"]
mypy = ["mypy (>=0.910)"]
mssql = ["pyodbc"]
mssql-pymssql = ["pymssql"]
mssql-pyodbc = ["pyodbc"]
mysql = ["mysqlclient (>=1.4.0)"]
mysql-connector = ["mysql-connector-python"]
mariadb-connector = ["mariadb (>=1.0.1,!=1.1.2,!=1.1.5)"]
oracle = ["cx_oracle (>=8)"]
oracle-oracledb = ["oracledb (>=1.0.1)"]
postgresql = ["psycopg2 (>=2.7)"]
postgresql-pg8000 = ["pg8000 (>=1.29.1)"]
postgresql-asyncpg = ["greenlet (!=0.4.17)", "asyncpg"]
postgresql-psycopg2binary = ["psycopg2-binary"]
postgresql-psycopg2cffi = ["psycopg2cffi"]
postgresql-psycopg = ["psycopg (>=3.0.7)"]
postgresql-psycopgbinary = ["psycopg[binary] (>=3.0.7)"]
pymysql = ["pymysql"]
aiomysql = ["greenlet (!=0.4.17)", "aiomysql (>=0.2.0)"]
aioodbc = ["greenlet (!=0.4.17)", "aioodbc"]
asyncmy = ["greenlet (!=0.4.17)", "asyncmy (>=0.2.3,!=0.2.4,!=0.2.6)"]
aiosqlite = ["greenlet (!=0.4.17)", "aiosqlite", "typing_extensions (!=3.10.0.1)"]
sqlcipher = ["sqlcipher3-binary"]

[[package]]
name = "stack-data"
version = "0.6.3"
description = "Extract data from python stack frames and tracebacks for informative displays"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
asttokens = ">=2.1.0"
executing = ">=1.2.0"
pure-eval = "*"

[package.extras]
tests = ["pytest", "typeguard", "pygments", "littleutils", "cython"]

[[package]]
name = "svgutils"
version = "0.3.4"
description = "Python SVG editor"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
lxml = "*"

[[package]]
name = "sympy"
version = "1.12"
description = "Computer algebra system (CAS) in Python"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
mpmath = ">=0.19"

[[package]]
name = "tedana"
version = "24.0.0"
description = "TE-Dependent Analysis (tedana) of multi-echo functional magnetic resonance imaging (fMRI) data."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
bokeh = "*"
mapca = ">=0.0.4,<=0.0.5"
matplotlib = "*"
nibabel = ">=2.5.1,<=5.2.1"
nilearn = ">=0.7,<=0.10.3"
numpy = ">=1.16,<=1.26.4"
pandas = ">=2.0,<=2.2.1"
pybtex = "*"
pybtex-apa-style = "*"
scikit-learn = ">=0.21,<=1.4.1.post1"
scipy = ">=1.2.0,<=1.12.0"
threadpoolctl = "*"

[package.extras]
all = ["tedana"]
dev = ["pre-commit"]
doc = ["sphinx-argparse", "sphinx-copybutton", "sphinx-rtd-theme (>=1.2.2)", "sphinx (>=6.2.1)", "sphinxcontrib-bibtex"]
tests = ["codecov", "coverage", "flake8-absolute-import", "flake8-black", "flake8-docstrings", "flake8-isort", "flake8-pyproject", "flake8-unused-arguments", "flake8-use-fstring", "flake8 (>=3.7)", "pep8-naming", "pytest", "pytest-cov (>=4.0.0)", "requests"]

[[package]]
name = "templateflow"
version = "24.2.0"
description = "TemplateFlow Python Client - TemplateFlow is the Zone of neuroimaging templates."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
importlib-resources = {version = ">=5.7", markers = "python_version < \"3.11\""}
pybids = ">=0.15.2"
requests = "*"
tqdm = "*"

[package.extras]
all = ["templateflow"]
datalad = ["datalad (>=0.19.0,<0.20.0)"]
doc = ["nbsphinx", "packaging", "pydot (>=1.2.3)", "pydotplus", "sphinx-click", "sphinx-multiversion", "sphinx-rtd-theme (>=0.4.3)", "sphinxcontrib-apidoc", "sphinx (>=4.0,<5.0)"]
docs = ["templateflow"]
test = ["coverage", "pytest", "pytest-cov (==2.5.1)", "pytest-xdist"]
tests = ["templateflow"]

[[package]]
name = "terminado"
version = "0.18.0"
description = "Tornado websocket backend for the Xterm.js Javascript terminal emulator library."
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
ptyprocess = {version = "*", markers = "os_name != \"nt\""}
pywinpty = {version = ">=1.1.0", markers = "os_name == \"nt\""}
tornado = ">=6.1.0"

[package.extras]
docs = ["myst-parser", "pydata-sphinx-theme", "sphinx"]
test = ["pre-commit", "pytest-timeout", "pytest (>=7.0)"]
typing = ["mypy (>=1.6,<2.0)", "traitlets (>=5.11.1)"]

[[package]]
name = "threadpoolctl"
version = "3.2.0"
description = "threadpoolctl"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "tifffile"
version = "2024.2.12"
description = "Read and write TIFF files"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
numpy = "*"

[package.extras]
all = ["imagecodecs (>=2023.8.12)", "matplotlib", "defusedxml", "lxml", "zarr", "fsspec"]

[[package]]
name = "tinycss2"
version = "1.2.1"
description = "A tiny CSS parser"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
webencodings = ">=0.4"

[package.extras]
doc = ["sphinx", "sphinx-rtd-theme"]
test = ["pytest", "isort", "flake8"]

[[package]]
name = "toml"
version = "0.10.2"
description = "Python Library for Tom's Obvious, Minimal Language"
category = "main"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "tomli"
version = "2.0.1"
description = "A lil' TOML parser"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "torch"
version = "2.2.1"
description = "Tensors and Dynamic neural networks in Python with strong GPU acceleration"
category = "main"
optional = false
python-versions = ">=3.8.0"

[package.dependencies]
filelock = "*"
fsspec = "*"
jinja2 = "*"
networkx = "*"
nvidia-cublas-cu12 = {version = "12.1.3.1", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
nvidia-cuda-cupti-cu12 = {version = "12.1.105", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
nvidia-cuda-nvrtc-cu12 = {version = "12.1.105", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
nvidia-cuda-runtime-cu12 = {version = "12.1.105", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
nvidia-cudnn-cu12 = {version = "8.9.2.26", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
nvidia-cufft-cu12 = {version = "11.0.2.54", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
nvidia-curand-cu12 = {version = "10.3.2.106", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
nvidia-cusolver-cu12 = {version = "11.4.5.107", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
nvidia-cusparse-cu12 = {version = "12.1.0.106", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
nvidia-nccl-cu12 = {version = "2.19.3", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
nvidia-nvtx-cu12 = {version = "12.1.105", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
sympy = "*"
triton = {version = "2.2.0", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\" and python_version < \"3.12\""}
typing-extensions = ">=4.8.0"

[package.extras]
opt-einsum = ["opt-einsum (>=3.3)"]
optree = ["optree (>=0.9.1)"]

[[package]]
name = "torchaudio"
version = "2.2.1"
description = "An audio package for PyTorch"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
torch = "2.2.1"

[[package]]
name = "torchvision"
version = "0.17.1"
description = "image and video datasets and models for torch deep learning"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = "*"
pillow = ">=5.3.0,<8.3.0 || >=8.4.0"
torch = "2.2.1"

[package.extras]
scipy = ["scipy"]

[[package]]
name = "tornado"
version = "6.4"
description = "Tornado is a Python web framework and asynchronous networking library, originally developed at FriendFeed."
category = "main"
optional = false
python-versions = ">= 3.8"

[[package]]
name = "tqdm"
version = "4.66.2"
description = "Fast, Extensible Progress Meter"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[package.extras]
dev = ["pytest (>=6)", "pytest-cov", "pytest-timeout", "pytest-xdist"]
notebook = ["ipywidgets (>=6)"]
slack = ["slack-sdk"]
telegram = ["requests"]

[[package]]
name = "traitlets"
version = "5.14.1"
description = "Traitlets Python configuration system"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.extras]
docs = ["myst-parser", "pydata-sphinx-theme", "sphinx"]
test = ["argcomplete (>=3.0.3)", "mypy (>=1.7.0)", "pre-commit", "pytest-mock", "pytest-mypy-testing", "pytest (>=7.0,<7.5)"]

[[package]]
name = "traits"
version = "6.3.2"
description = "Observable typed attributes for Python classes"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
docs = ["enthought-sphinx-theme", "Sphinx (>=2.1.0,!=3.2.0)"]
examples = ["numpy", "pillow"]
test = ["cython", "flake8", "flake8-ets", "mypy", "pyface", "setuptools", "Sphinx (>=2.1.0,!=3.2.0)", "traitsui", "numpy", "pyside2"]

[[package]]
name = "transforms3d"
version = "0.4.1"
description = "Functions for 3D coordinate transformations"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "triton"
version = "2.2.0"
description = "A language and compiler for custom Deep Learning operations"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
filelock = "*"

[package.extras]
build = ["cmake (>=3.20)", "lit"]
tests = ["autopep8", "flake8", "isort", "numpy", "pytest", "scipy (>=1.7.1)", "torch"]
tutorials = ["matplotlib", "pandas", "tabulate", "torch"]

[[package]]
name = "types-python-dateutil"
version = "2.8.19.20240106"
description = "Typing stubs for python-dateutil"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "typing-extensions"
version = "4.9.0"
description = "Backported and Experimental Type Hints for Python 3.8+"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "tzdata"
version = "2023.4"
description = "Provider of IANA time zone data"
category = "main"
optional = false
python-versions = ">=2"

[[package]]
name = "tzlocal"
version = "5.2"
description = "tzinfo object for the local timezone"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
tzdata = {version = "*", markers = "platform_system == \"Windows\""}

[package.extras]
devenv = ["pytest (>=4.3)", "pytest-mock (>=3.3)", "pytest-cov", "check-manifest", "zest.releaser"]

[[package]]
name = "uri-template"
version = "1.3.0"
description = "RFC 6570 URI Template Processor"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
dev = ["types-pyyaml", "mypy", "flake8", "flake8-annotations", "flake8-bandit", "flake8-bugbear", "flake8-commas", "flake8-comprehensions", "flake8-continuation", "flake8-datetimez", "flake8-docstrings", "flake8-import-order", "flake8-literal", "flake8-modern-annotations", "flake8-noqa", "flake8-pyproject", "flake8-requirements", "flake8-typechecking-import", "flake8-use-fstring", "pep8-naming"]

[[package]]
name = "urllib3"
version = "2.0.7"
description = "HTTP library with thread-safe connection pooling, file post, and more."
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
brotli = ["brotli (>=1.0.9)", "brotlicffi (>=0.8.0)"]
secure = ["certifi", "cryptography (>=1.9)", "idna (>=2.0.0)", "pyopenssl (>=17.1.0)", "urllib3-secure-extra"]
socks = ["pysocks (>=1.5.6,!=1.5.7,<2.0)"]
zstd = ["zstandard (>=0.18.0)"]

[[package]]
name = "wcwidth"
version = "0.2.13"
description = "Measures the displayed width of unicode strings in a terminal"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "webcolors"
version = "1.13"
description = "A library for working with the color formats defined by HTML and CSS."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["furo", "sphinx", "sphinx-copybutton", "sphinx-inline-tabs", "sphinx-notfound-page", "sphinxext-opengraph"]
tests = ["pytest", "pytest-cov"]

[[package]]
name = "webencodings"
version = "0.5.1"
description = "Character encoding aliases for legacy web content"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "websocket-client"
version = "1.7.0"
description = "WebSocket client for Python with low level API options"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.extras]
docs = ["Sphinx (>=6.0)", "sphinx-rtd-theme (>=1.1.0)"]
optional = ["python-socks", "wsaccel"]
test = ["websockets"]

[[package]]
name = "widgetsnbextension"
version = "4.0.9"
description = "Jupyter interactive widgets for Jupyter Notebook"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "wrapt"
version = "1.16.0"
description = "Module for decorators, wrappers and monkey patching."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "xxhash"
version = "3.4.1"
description = "Python binding for xxHash"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "xyzservices"
version = "2024.4.0"
description = "Source of XYZ tiles providers"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "yarl"
version = "1.9.4"
description = "Yet another URL library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
idna = ">=2.0"
multidict = ">=4.0"

[metadata]
lock-version = "1.1"
python-versions = "^3.10"
content-hash = "2af6efd8cd6404e8d4940b266c7520c3b2b83ee9476ac54b0bf69cba141b2244"

[metadata.files]
aiohttp = []
aiosignal = []
anyio = []
appnope = []
apscheduler = []
argon2-cffi = []
argon2-cffi-bindings = []
arrow = []
astor = []
asttokens = []
async-lru = []
async-timeout = []
attrs = []
babel = []
beautifulsoup4 = []
bids-validator = []
bleach = []
bokeh = []
certifi = []
cffi = []
charset-normalizer = []
ci-info = []
click = []
codecarbon = []
colorama = []
comm = []
contourpy = []
cycler = []
datasets = []
debugpy = []
decorator = []
defusedxml = []
dill = []
docopt = []
etelemetry = []
exceptiongroup = []
executing = []
fastjsonschema = []
filelock = []
fmriprep = []
fmriprep-docker = []
fonttools = []
formulaic = []
fqdn = []
frozenlist = []
fsspec = []
greenlet = []
h5py = []
huggingface-hub = []
idna = []
imageio = []
importlib-resources = []
indexed-gzip = []
interface-meta = []
ipykernel = []
ipython = []
ipywidgets = []
isodate = []
isoduration = []
jedi = []
jinja2 = []
joblib = []
json5 = []
jsonpointer = []
jsonschema = []
jsonschema-specifications = []
jupyter = []
jupyter-client = []
jupyter-console = []
jupyter-core = []
jupyter-events = []
jupyter-lsp = []
jupyter-server = []
jupyter-server-terminals = []
jupyterlab = []
jupyterlab-pygments = []
jupyterlab-server = []
jupyterlab-widgets = []
kiwisolver = []
latexcodec = []
lazy-loader = []
lockfile = []
looseversion = []
lxml = []
mapca = []
markupsafe = []
matplotlib = []
matplotlib-inline = []
migas = []
mistune = []
mne = []
mpmath = []
multidict = []
multiprocess = []
nbclient = []
nbconvert = []
nbformat = []
nest-asyncio = []
networkx = []
nibabel = []
nilearn = []
nipype = []
nireports = []
nistats = []
nitime = []
nitransforms = []
niworkflows = []
notebook = []
notebook-shim = []
num2words = []
numpy = []
nvidia-cublas-cu12 = []
nvidia-cuda-cupti-cu12 = []
nvidia-cuda-nvrtc-cu12 = []
nvidia-cuda-runtime-cu12 = []
nvidia-cudnn-cu12 = []
nvidia-cufft-cu12 = []
nvidia-curand-cu12 = []
nvidia-cusolver-cu12 = []
nvidia-cusparse-cu12 = []
nvidia-nccl-cu12 = []
nvidia-nvjitlink-cu12 = []
nvidia-nvtx-cu12 = []
overrides = []
packaging = []
pandas = []
pandocfilters = []
parso = []
pexpect = []
pillow = []
platformdirs = []
pooch = []
prometheus-client = []
prompt-toolkit = []
prov = []
psutil = []
ptyprocess = []
pure-eval = []
py-cpuinfo = []
pyarrow = []
pyarrow-hotfix = []
pybids = []
pybtex = []
pybtex-apa-style = []
pycparser = []
pydot = []
pygments = []
pynvml = []
pyparsing = []
python-dateutil = []
python-json-logger = []
pytz = []
pywin32 = []
pywinpty = []
pyyaml = []
pyzmq = []
qtconsole = []
qtpy = []
rapidfuzz = []
rdflib = []
referencing = []
requests = []
rfc3339-validator = []
rfc3986-validator = []
rpds-py = []
scikit-image = []
scikit-learn = []
scipy = []
sdcflows = []
seaborn = []
send2trash = []
simplejson = []
six = []
smriprep = []
sniffio = []
soupsieve = []
sqlalchemy = []
stack-data = []
svgutils = []
sympy = []
tedana = []
templateflow = []
terminado = []
threadpoolctl = []
tifffile = []
tinycss2 = []
toml = []
tomli = []
torch = []
torchaudio = []
torchvision = []
tornado = []
tqdm = []
traitlets = []
traits = []
transforms3d = []
triton = []
types-python-dateutil = []
typing-extensions = []
tzdata = []
tzlocal = []
uri-template = []
urllib3 = []
wcwidth = []
webcolors = []
webencodings = []
websocket-client = []
widgetsnbextension = []
wrapt = []
xxhash = []
xyzservices = []
yarl = []
